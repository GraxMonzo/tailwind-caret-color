name: Test and Publish

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.3

      - name: Setup Node.js
        uses: actions/setup-node@v1.4.4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use cached node_modules
        id: cache
        uses: actions/cache@v2.1.1
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}-${{ matrix.node-version }}
          restore-keys: |
            nodeModules-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
        env:
          CI: true

      - name: Execute tests
        run: npm test
        env:
          CI: true
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Use cached node_modules
        id: cache
        uses: actions/cache@v2.1.1
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}-${{ matrix.node-version }}
          restore-keys: |
            nodeModules-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
        env:
          CI: true

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: restricted

      - if: steps.publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
